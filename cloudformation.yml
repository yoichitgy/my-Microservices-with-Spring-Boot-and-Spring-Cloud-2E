AWSTemplateFormatVersion: "2010-09-09"

Resources:
  devVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: dev-vpc

  devPublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: us-west-2a
      VpcId: !Ref devVPC
      CidrBlock: 10.0.0.0/24
      Tags:
        - Key: Name
          Value: dev-public-subnet

  devIgw:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: dev-igw

  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref devVPC
      InternetGatewayId: !Ref devIgw

  devRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref devVPC
      Tags:
        - Key: Name
          Value: dev-route-table

  devRoutePublic:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref devRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref devIgw

  routeTableAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref devPublicSubnet
      RouteTableId: !Ref devRouteTable

  devSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: dev-sec-group
      GroupDescription: dev-sec-group
      VpcId: !Ref devVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 8443
          ToPort: 8443
          CidrIp: 0.0.0.0/0

  ec2SessionManagerRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ec2-sessionmanager-role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore

  ec2SessionManagerProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - Ref: ec2SessionManagerRole
      InstanceProfileName: ec2-sessionmanager-profile

  devEC2:
    Type: AWS::EC2::Instance
    Properties:
      DisableApiTermination: false
      ImageId: ami-0ca285d4c2cda3300
      InstanceType: r5ad.xlarge
      IamInstanceProfile: !Ref ec2SessionManagerProfile
      Monitoring: false
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeviceIndex: "0"
          SubnetId: !Ref devPublicSubnet
          GroupSet:
          - !Ref devSecGroup
      Tags:
        - Key: Name
          Value: dev-ec2
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          yum -y update
          /opt/aws/bin/cfn-init --stack ${AWS::StackName} --resource devEC2 --region ${AWS::Region}    
    Metadata: 
      AWS::CloudFormation::Init:
        config:
          commands: 
            git:
              command: "yum -y install git"
            jq:
              command: "yum -y install jq"
            siege:
              command: "amazon-linux-extras install -y epel && yum -y install siege"
            corretto18:
              command: "rpm --import https://yum.corretto.aws/corretto.key && curl -L -o /etc/yum.repos.d/corretto.repo https://yum.corretto.aws/corretto.repo && yum install -y java-18-amazon-corretto-devel"
            docker:
              command: "amazon-linux-extras install docker"
            docker-compose:
              command: "curl -L https://github.com/docker/compose/releases/download/v2.5.1/docker-compose-linux-x86_64 -o /usr/local/bin/docker-compose && chmod +x /usr/local/bin/docker-compose"
            kubectl:
              command: "curl -L https://storage.googleapis.com/kubernetes-release/release/v1.24.1/bin/linux/amd64/kubectl -o /usr/local/bin/kubectl && chmod +x /usr/local/bin/kubectl"
            minikube:
              command: "curl -L https://storage.googleapis.com/minikube/releases/v1.25.2/minikube-linux-amd64 -o /usr/local/bin/minikube && chmod +x /usr/local/bin/minikube"
            istioctl:
              command: "curl -LO https://github.com/istio/istio/releases/download/1.13.4/istio-1.13.4-linux-amd64.tar.gz && tar xzf istio-1.13.4-linux-amd64.tar.gz && mv istio-1.13.4/bin/istioctl /usr/local/bin/istioctl"
            helm:
              command: "curl -LO https://get.helm.sh/helm-v3.9.0-linux-amd64.tar.gz && tar xzf helm-v3.9.0-linux-amd64.tar.gz && mv linux-amd64/helm /usr/local/bin/helm"
          #
          # Run the following command on your own after logging in as ssm-user on Session Manager.
          #
          # docker-config:
          #   command: "sudo groupadd docker && sudo usermod -aG docker ssm-user"
          # docker-daemon:
          #   command: "sudo systemctl start docker && sudo systemctl enable docker"
